:root {

--aspectW: 2209;
--aspectH: 1242;

--cardWsize: 40vw;
--sizeFactor: calc(var(--cardWsize) / var(--aspectW));
--cardHsize: calc(var(--aspectH) * var(--sizeFactor));

}

* {
    box-sizing: border-box;  
    padding: 0;
    margin: 0;
}

.cardBoard {
width: 90vw;
height: 90vh;
border: 2px dashed burlywood;
position: relative;
left:2em;
top: 2em;

box-shadow: darkgrey 1em 1em;

transform-style: preserve-3d; 

transform-origin: center;
transition: 0.5s;
}

.card {

    /* width: 70vw;
    height: 70vh; */

    width: var(--cardWsize);
    height: var(--cardWsize);


    /* border: 6px solid burlywood; */
    position: relative;
    left:2em;
    top: 2em;


    transform-style: preserve-3d; 
    transform-origin: center;
    transition: 0.5s;
}

.cardFront.landscape, .cardBack.landscape {
    /* width:400px;
    height:300px; */

    width: var(--cardWsize);
    height: var(--cardHsize);

}

.cardFront {
    background-size: contain;
    background-repeat: no-repeat;
}

.cardFront.portrait, .cardBack.portrait {
    /* width:300px;
    height:400px; */
    width: var(--cardHsize);
    height: var(--cardWsize);

}

.cardFront, .cardBack {

display: inline-block;
/* background-color: cornsilk; */
border:darkgray 3px solid;
border-radius: 1em;
box-shadow: darkgrey 1em 1em;

position: absolute;
/* left:40px;
top:50px; */

transform-origin: center;
transform-style: preserve-3d; 

backface-visibility: hidden;
-webkit-backface-visibility: hidden;  


transition: 0.5s;
}


.cardFront {
z-index: 20;
background-color: black;
}

.cardBack {
    position: absolute;
    /* right:40px;
    top: 50px; */
    transform: rotateY(180deg);
    background-color: white;
    z-index: -20;

}





#toggle {
    display: none;
}

#toggle:checked ~ .card {
    transform: rotateY(180deg);

}

/* experiment below with a spread card toggle

    cannot find how to target the element if
     a child of sibling of the checked psuedo element ????

     so trying anyway with hidden checkbox to get the spread style

*/

#toggle2, #bothSides {
    display: none;
}



#toggle2:checked ~ .cardFront, #toggle2:checked ~ .cardBack {

    box-shadow: none;
    border-radius: 0;
        border: darkslateblue 1px solid;


}

#toggle2:checked ~ .cardFront {
    border-right: none;

}

#toggle2:checked ~ .cardBack {

    transform: rotateY(0deg);
    /* transform: translateX(var(--cardWsize)); */
    transform: translateY(var(--cardHsize));


}




#flipButton {
    background-color: darkseagreen;
    padding: 2em;
    position: absolute;
    /* bottom: 1em;
    left: 3em; */
    /* top:2em; */
    right: 2em;;
    bottom: 2em;;

    user-select: none;
    border-radius: 0.4em;
}
#toggle:checked ~ #flipButton {
    background-color: darkslategray;
    color: white;
}
#flipButton:active {
    background-color: orange !important;
}

.rotateR {
    transform: rotate(90deg);
}

article.cardBack {
    font-family: Arial, Helvetica, sans-serif;
    overflow-y: scroll;
    padding: 0.2rem 0 0 1rem;
}

article.cardBack h1 {
    font-size: 2rem;
    line-height: 3rem;
}

article.cardBack h3 {
    font-size: 1.2rem;
    line-height: 2rem;
}

article.cardBack p {
    font-size: 1rem;
    line-height: 1.4rem;
    padding-bottom: 1.2rem;
}